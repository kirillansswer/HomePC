import os
import sys
import time as tim
import ctypes
import platform
import datetime

import requests
import telebot
import calendar
import wikipedia
import webbrowser
import subprocess

import pyautogui as pag

from config import *
from telebot import types
from datetime import time, date
from weekday import *
from weather import *
from config import settings

bot = telebot.TeleBot(token=settings.TOKEN, parse_mode='HTML')
wikipedia.set_lang(prefix='ru')


@bot.message_handler(commands=['start'])
def start(message: types.Message):
    key_volume_down = types.KeyboardButton('üîâ')
    key_volume_up = types.KeyboardButton('üîä')

    key_play_right = types.KeyboardButton('‚è©')
    key_play_left = types.KeyboardButton('‚è™')

    key_openurl = types.KeyboardButton('üîó –û—Ç–∫—Ä—ã—Ç—å —Å—Å—ã–ª–∫—É')
    key_message_to_screen = types.KeyboardButton('üì® –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —ç–∫—Ä–∞–Ω')
    key_input = types.KeyboardButton("üë• –°–æ–±—â–µ–Ω–∏–µ —Å –æ—Ç–≤–µ—Ç–æ–º")
    key_wallpaper = types.KeyboardButton('üèû –°–º–µ–Ω–∏—Ç—å –æ–±–æ–∏')
    key_wiki = types.KeyboardButton('‚ÑπÔ∏è –ü–æ–∏—Å–∫ –Ω–∞ WIKIPEDIA')
    key_screenshot = types.KeyboardButton('üì∑ –°–∫—Ä–∏–Ω—à–æ—Ç')
    key_offpc = types.KeyboardButton('üö´ –í—ã–∫–ª—é—á–∏—Ç—å –ü–ö')
    key_infopc = types.KeyboardButton('üñ• –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è')

    key_menu_reply = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2).add(key_volume_up, key_volume_down,
                                                                                      key_play_left, key_play_right,
                                                                                      key_openurl,
                                                                                      key_message_to_screen, key_input,
                                                                                      key_wallpaper, key_wiki,
                                                                                      key_screenshot,
                                                                                      key_offpc, key_infopc)
    bot.send_message(message.from_user.id,
                     f"<b>üñ• –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ PCCONTROL!\n\nüåû–°–µ–≥–æ–¥–Ω—è {weekday}, {CurrentDay} {CurrentMonth}\n\nüåß–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤ {place}e {t1}, {dt}</b>",
                     reply_markup=key_menu_reply)


@bot.message_handler(content_types=['text'])
def key_volume_down(message: types.Message):
    if message.text == 'üîâ':
        pag.press('volumedown', 10)
        bot.delete_message(message.chat.id, message.message_id)

    if message.text == 'üîä':
        pag.press('volumeup', 10)
        bot.delete_message(message.chat.id, message.message_id)

    if message.text == '‚è©':
        pag.press('right')
        bot.delete_message(message.chat.id, message.message_id)

    if message.text == '‚è™':
        pag.press('left')
        bot.delete_message(message.chat.id, message.message_id)

    if message.text == 'üîó –û—Ç–∫—Ä—ã—Ç—å —Å—Å—ã–ª–∫—É':
        msg = bot.send_message(message.from_user.id, "<b>–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Å—Å—ã–ª–∫–∏:</b>")
        bot.register_next_step_handler(msg, opennexturl)
        bot.delete_message(message.chat.id, message.message_id)

    if message.text == 'üì® –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —ç–∫—Ä–∞–Ω':
        mesg = bot.send_message(message.from_user.id, "<b>–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è:</b>")
        bot.register_next_step_handler(mesg, send_message_to_user)
        bot.delete_message(message.chat.id, message.message_id)

    if message.text == 'üë• –°–æ–±—â–µ–Ω–∏–µ —Å –æ—Ç–≤–µ—Ç–æ–º':
        meesg = bot.send_message(message.from_user.id, "<b>–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç</b>")
        bot.register_next_step_handler(meesg, message_with_answer)

    if message.text == 'üèû –°–º–µ–Ω–∏—Ç—å –æ–±–æ–∏':
        msg = bot.send_message(message.chat.id, "<b>–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–∞—Ä—Ç–∏–Ω–∫—É:</b>")
        bot.register_next_step_handler(msg, set_wallpaper)

    if message.text == '‚ÑπÔ∏è –ü–æ–∏—Å–∫ –Ω–∞ WIKIPEDIA':
        meesg = bot.send_message(message.from_user.id, '<b>–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ –Ω–∞–π—Ç–∏?</b>')
        bot.register_next_step_handler(meesg, wiki_search)
        bot.delete_message(message.chat.id, message.message_id)

    if message.text == 'üì∑ –°–∫—Ä–∏–Ω—à–æ—Ç':
        filename = f"1.jpg"
        pag.screenshot(filename)

        with open(filename, "rb") as img:
            bot.send_photo(message.from_user.id, img)
        os.remove(filename)

    if message.text == 'üö´ –í—ã–∫–ª—é—á–∏—Ç—å –ü–ö':
        meeesg = bot.send_message(message.from_user.id, '<b>–ß–µ—Ä–µ–∑ –∫–∞–∫–æ–µ –≤—Ä–µ–º—è —Ö–æ—Ç–∏—Ç–µ –≤—ã–∫–ª—é—á–∏—Ç—å –ü–ö? (–í —Å–µ–∫—É–Ω–¥–∞—Ö)</b>')
        bot.register_next_step_handler(meeesg, off_pc_of_timer)
        bot.delete_message(message.chat.id, message.message_id)

    if message.text == 'üñ• –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è':
        response = requests.get('http://jsonip.com/').json()
        bot.send_message(message.from_user.id,
                         f"<b>ü§ñ–í–∞—à IP: {response['ip']} \n\n–°–∏—Å—Ç–µ–º–∞: {platform.system()}{platform.release()}\n–ò–º—è –ü–ö: {platform.node()}\n–ü—Ä–æ—Ü–µ—Å—Å–æ—Ä: {platform.processor()}</b>")
        bot.delete_message(message.chat.id, message.message_id)


def opennexturl(message: types.Message):
    webbrowser.open(message.text, new=2, autoraise=True)
    bot.send_message(message.from_user.id, f"<b>–°—Å—ã–ª–∫–∞: {message.text} —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫—Ä—ã—Ç–∞!</b>")
    bot.delete_message(message.chat.id, message.message_id)


def send_message_to_user(message: types.Message):
    pag.alert(message.text, "–°–æ–æ–±—â–µ–Ω–∏–µ")
    bot.delete_message(message.chat.id, message.message_id)
    bot.send_message(message.from_user.id, f'<b>–°–æ–æ–±—â–µ–Ω–∏–µ: "{message.text}" —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ!</b>')


def message_with_answer(message: types.Message):
    try:
        answer = pag.prompt(message.text, "~")
        bot.send_message(message.chat.id, f"<b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–≤–µ—Ç–∏–ª: {answer}</b>")
    except Exception:
        bot.send_message(message.chat.id, "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...")


def set_wallpaper(message: types.Message):
    file = message.photo[-1].file_id
    file = bot.get_file(file)

    download_file = bot.download_file(file.file_path)
    with open(f"screen.jpg", "wb") as img:
        img.write(download_file)

    path = os.path.abspath("image.jpg")
    ctypes.windll.user32.SystemParametersInfoW(20, 0, path, 0)


def wiki_search(message: types.Message):
    try:
        bot.send_message(message.from_user.id, wikipedia.summary(message.text))
    except Exception:
        bot.send_message(message.from_user.id, "<b>üö´ –î–∞–Ω–Ω–∞—è —Å—Ç–∞—Ç—å—è –Ω–∞ –≤–∏–∫–∏–ø–µ–¥–∏–∏ –Ω–µ –±—ã–ª–∞ –Ω–∞–π–¥–µ–Ω–Ω–∞</b>")


def off_pc_of_timer(message: types.Message):
    pag.alert(f'–í–∞—à –ü–ö –±—É–¥–µ—Ç –≤—ã–∫–ª—é—á–µ–Ω —á–µ—Ä–µ–∑ "{message.text}"!')
    tim.sleep(int(message.text))
    os.system('shutdown -s')


if __name__ == '__main__':
    bot.polling()
